// <auto-generated />
using KP_Tools.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KP_Tools.Migrations
{
    [DbContext(typeof(StatContext))]
    [Migration("20200425042643_ChangedDataType")]
    partial class ChangedDataType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KP_Tools.Models.Stat", b =>
                {
                    b.Property<int>("StatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatType")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<double>("StatValue")
                        .HasColumnType("float");

                    b.HasKey("StatId");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("KP_Tools.Models.StatWeapon", b =>
                {
                    b.Property<int>("StatId")
                        .HasColumnType("int");

                    b.Property<int>("WeaponId")
                        .HasColumnType("int");

                    b.HasKey("StatId", "WeaponId");

                    b.HasIndex("WeaponId");

                    b.ToTable("StatWeapons");
                });

            modelBuilder.Entity("KP_Tools.Models.Weapon", b =>
                {
                    b.Property<int>("WeaponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("WeaponActionEndurance")
                        .HasColumnType("float");

                    b.Property<double>("WeaponActionSpeed")
                        .HasColumnType("float");

                    b.Property<double>("WeaponCastingSpeed")
                        .HasColumnType("float");

                    b.Property<double>("WeaponHp")
                        .HasColumnType("float");

                    b.Property<double>("WeaponHpRecovery")
                        .HasColumnType("float");

                    b.Property<double>("WeaponMagicAttack")
                        .HasColumnType("float");

                    b.Property<double>("WeaponMagicDefense")
                        .HasColumnType("float");

                    b.Property<double>("WeaponMagicalCritRate")
                        .HasColumnType("float");

                    b.Property<double>("WeaponMana")
                        .HasColumnType("float");

                    b.Property<double>("WeaponManaRecovery")
                        .HasColumnType("float");

                    b.Property<double>("WeaponMovementSpeed")
                        .HasColumnType("float");

                    b.Property<string>("WeaponName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<double>("WeaponPhysicalAttack")
                        .HasColumnType("float");

                    b.Property<double>("WeaponPhysicalCritRate")
                        .HasColumnType("float");

                    b.Property<double>("WeaponPhysicalDefense")
                        .HasColumnType("float");

                    b.Property<string>("WeaponProperty")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<double>("WeaponRageGeneration")
                        .HasColumnType("float");

                    b.Property<double>("WeaponSpellEndurance")
                        .HasColumnType("float");

                    b.Property<double>("WeaponStamina")
                        .HasColumnType("float");

                    b.Property<double>("WeaponStaminaRecovery")
                        .HasColumnType("float");

                    b.Property<string>("WeaponType")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("WeaponId");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("KP_Tools.Models.StatWeapon", b =>
                {
                    b.HasOne("KP_Tools.Models.Stat", "Stat")
                        .WithMany("StatWeapons")
                        .HasForeignKey("StatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KP_Tools.Models.Weapon", "Weapon")
                        .WithMany("StatWeapons")
                        .HasForeignKey("WeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
